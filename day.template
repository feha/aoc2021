package main;

import (
    "aoc/libs/utils"
    "fmt"
    "strings"
    // "strconv"
);

/**
  * Start - %{starttime}
  * p1 done - %{p1Done}
  * p2 done - %{p2Done}
  */

func main() {
    input, _ := utils.Get_input(%{year}, %{day});
    // fmt.Printf("Input: %s \n", input);

    success := true;
    for i := range part1_test_input {
        result := part1(part1_test_input[i])
        if (result != part1_test_output[i]) {
            success = false;
            fmt.Printf("part1 failed with input %s: result %s != expected %s \n",
                    part1_test_input[i],
                    result,
                    part1_test_output[i]);
            break;
        }
    }

    fmt.Printf("part1 minitest success: %t! \n", success);
    if success {
        p1 := part1(input);
        fmt.Printf("part1: %s\n\n", p1);
    }
    
    success = true;
    for i := range part2_test_input {
        result := part2(part2_test_input[i])
        if (result != part2_test_output[i]) {
            success = false;
            fmt.Printf("part2 failed with input %s: result %s != expected %s \n",
                    part2_test_input[i],
                    result,
                    part2_test_output[i]);
            break;
        }
    }
    fmt.Printf("part2 minitest success: %t! \n", success);

    if success {
        p2 := part2(input);
        fmt.Printf("part2: %s\n", p2);
    }
}

const separator string = "\n";

var part1_test_input = []string{
    ``,
};
var part1_test_output = []string{
    ``,
};
func part1(input string) string {
    inputs := utils.Trim_array(strings.Split(strings.Trim(input, separator), separator));
    // nums, _ := utils.StrToInt_array(inputs);

    // ...

    return "";
    // return strconv.Itoa(result);
}

var part2_test_input = []string{
    ``,
};
var part2_test_output = []string{
    ``,
};
func part2(input string) string {
    // inputs := utils.Trim_array(strings.Split(strings.Trim(input, separator), separator));
    // nums, _ := utils.StrToInt_array(inputs);

    // ...

    return "";
    // return strconv.Itoa(result);
}
